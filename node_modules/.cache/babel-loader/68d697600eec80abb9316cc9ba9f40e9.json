{"ast":null,"code":"var _jsxFileName = \"/home/trainee/Documents/react-demo/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [word, setWord] = useState(props.word);\n  useEffect(() => {\n    document.title = `${props.count} ${props.word}`;\n  });\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  const reset = () => {\n    setCount(props.count);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is \", word, \" \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: word,\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"v8jqUfs4L7wFi+feCfVwEzX0aAs=\");\n\n_c = App;\nApp.defaultProps = {\n  count: 0,\n  word: 'count'\n};\n\nconst AddNotes = () => {\n  _s2();\n\n  const [title, setTitle] = useState('sd');\n  const [notes, setNotes] = useState([]);\n  const [noteBody, setNoteBody] = useState('');\n\n  const addnote = e => {\n    e.preventDefault(); //console.log(e.target.value)\n    //console.log(title)\n\n    setNotes([...notes, {\n      title,\n      noteBody\n    }]);\n    setTitle('');\n  };\n\n  const removeNote = title => {\n    setNotes(notes.filter(note => note.title !== title));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [note.title, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.noteBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeNote(note.title),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addnote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: noteBody,\n        onChange: e => setNoteBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddNotes, \"JLjvNMXvexjPoZnzJIGfPbJsIic=\");\n\n_c2 = AddNotes;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 8\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddNotes\");","map":{"version":3,"sources":["/home/trainee/Documents/react-demo/src/index.js"],"names":["React","useState","useEffect","ReactDOM","reportWebVitals","App","props","count","setCount","word","setWord","document","title","increment","decrement","reset","e","target","value","defaultProps","AddNotes","setTitle","notes","setNotes","noteBody","setNoteBody","addnote","preventDefault","removeNote","filter","note","map","render","getElementById"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,KAAK,CAACG,IAAP,CAAhC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,KAAT,GAAgB,GAAEN,KAAK,CAACC,KAAM,IAAGD,KAAK,CAACG,IAAK,EAA5C;AACD,GAFQ,CAAT;;AAGA,QAAMI,SAAS,GAAG,MAAM;AAEpBL,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAEH,GAJD;;AAKA,QAAMO,SAAS,GAAG,MAAM;AACtBN,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,GAFD;;AAGA,QAAMQ,KAAK,GAAG,MAAM;AAClBP,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,6BAAaE,IAAb,OAAoBF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEL,IAA1B;AAAgC,MAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMb,G;;KAAAA,G;AA2BNA,GAAG,CAACc,YAAJ,GAAmB;AACjBZ,EAAAA,KAAK,EAAE,CADU;AAEjBE,EAAAA,IAAI,EAAC;AAFY,CAAnB;;AAMA,MAAMW,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBpB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMyB,OAAO,GAAIV,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACW,cAAF,GADqB,CAErB;AACA;;AACAJ,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AAACV,MAAAA,KAAD;AAAOY,MAAAA;AAAP,KAFO,CAAD,CAAR;AAIAH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAUA,QAAMO,UAAU,GAAIhB,KAAD,IAAW;AAC5BW,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAQA,IAAI,CAAClB,KAAL,KAAaA,KAAlC,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,gBAAKU,KAAK,CAACS,GAAN,CAAWD,IAAD,iBACb;AAAA,gCACG;AAAA,kCAAK;AAAA,uBAAKA,IAAI,CAAClB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAA4B;AAAA,sBAAKkB,IAAI,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAII,UAAU,CAACE,IAAI,CAAClB,KAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADG;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAQA;AAAM,MAAA,QAAQ,EAAEc,OAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEd,KAA1B;AAAiC,QAAA,QAAQ,EAAGI,CAAD,IAAOK,QAAQ,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAEM,QAA7B;AAAuC,QAAA,QAAQ,EAAGR,CAAD,IAAKS,WAAW,CAACT,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCD;;IAAME,Q;;MAAAA,Q;AAoCNjB,QAAQ,CAAC6B,MAAT,eACE;AAAA,yBAAK,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,QADF,EAEErB,QAAQ,CAACsB,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACA7B,eAAe","sourcesContent":["import React, { useState,useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nconst App = (props) => {\n  const [count, setCount] = useState(0)\n  const [word, setWord] = useState(props.word);\n  useEffect(() => {\n    document.title=`${props.count} ${props.word}`\n  })\n  const increment = () => {\n    \n      setCount(count+1)\n    \n  }\n  const decrement = () => {\n    setCount(count-1)\n  }\n  const reset = () => {\n    setCount(props.count)\n  }\n  return (\n    <div>\n      <h1>This is {word} {count}</h1>\n      <button onClick={increment}>+1</button>\n      <button onClick={reset}>Reset</button>\n      <button onClick={decrement}>-1</button>\n      <input type='text' value={word} onChange={(e) => setWord(e.target.value)}></input>\n    </div>\n  )\n}\nApp.defaultProps = {\n  count: 0,\n  word:'count'\n}\n\n\nconst AddNotes = () => {\n  const [title, setTitle] = useState('sd');\n  const [notes, setNotes] = useState([]);\n  const [noteBody, setNoteBody] = useState('');\n  \n  const addnote = (e) => {\n    e.preventDefault()\n    //console.log(e.target.value)\n    //console.log(title)\n    setNotes([\n      ...notes,\n      {title,noteBody}\n    ])\n    setTitle('')\n  }\n  const removeNote = (title) => {\n    setNotes(notes.filter((note)=>note.title!==title))\n  }\n  return (\n    <div>\n      <h1>{notes.map((note) => (\n        <div>\n          {<div><h1>{note.title}  </h1><p>{ note.noteBody}</p></div>}\n          \n          <button onClick={()=>removeNote(note.title)}>Remove</button>\n        </div>\n      )) }</h1>\n    <form onSubmit={addnote}>\n        <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n        <textarea type='text' value={noteBody} onChange={(e)=>setNoteBody(e.target.value)}/>\n      <button>Add Note</button>\n      </form>\n      </div>\n  )\n}\n\nReactDOM.render(\n  <div><App /></div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}