{"ast":null,"code":"var _jsxFileName = \"/home/trainee/Documents/react-demo/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is count \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 8\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trainee/Documents/react-demo/src/index.js"],"names":["React","useState","ReactDOM","reportWebVitals","App","count","setCount","increment","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMM,SAAS,GAAG,MAAM;AAEpBD,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAEH,GAJD;;AAKA,sBACE;AAAA,4BACE;AAAA,mCAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;GAAMH,G;;KAAAA,G;AAeNF,QAAQ,CAACM,MAAT,eACE;AAAA,yBAAK,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAP,eAAe","sourcesContent":["import React, { useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nconst App = () => {\n  const [count, setCount] = useState(0)\n  const increment = () => {\n    \n      setCount(count+1)\n    \n  }\n  return (\n    <div>\n      <h1>This is count {count}</h1>\n      <button onClick={increment}></button>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <div><App/></div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}