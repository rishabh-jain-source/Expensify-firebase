{"ast":null,"code":"var _jsxFileName = \"/home/trainee/Documents/react-demo/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  const reset = () => {\n    setCount(props.count);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is count \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nApp.defaultProps = {\n  count: 0\n};\n\nconst AddNotes = () => {\n  _s2();\n\n  const [title, setTitle] = useState('sd');\n  const [notes, setNotes] = useState([]);\n  const [noteBody, setNoteBody] = useState('');\n\n  const addnote = e => {\n    e.preventDefault(); //console.log(e.target.value)\n    //console.log(title)\n\n    setNotes([...notes, {\n      title,\n      noteBody\n    }]);\n    setTitle('');\n  };\n\n  const removeNote = title => {\n    setNotes(notes.filter(note => note.title !== title));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [note.title, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.noteBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeNote(note.title),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addnote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: noteBody,\n        onChange: e => setNoteBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddNotes, \"JLjvNMXvexjPoZnzJIGfPbJsIic=\");\n\n_c2 = AddNotes;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(AddNotes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 8\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddNotes\");","map":{"version":3,"sources":["/home/trainee/Documents/react-demo/src/index.js"],"names":["React","useState","ReactDOM","reportWebVitals","App","props","count","setCount","increment","decrement","reset","defaultProps","AddNotes","title","setTitle","notes","setNotes","noteBody","setNoteBody","addnote","e","preventDefault","removeNote","filter","note","map","target","value","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nconst App = (props) => {\n  const [count, setCount] = useState(0)\n  const increment = () => {\n    \n      setCount(count+1)\n    \n  }\n  const decrement = () => {\n    setCount(count-1)\n  }\n  const reset = () => {\n    setCount(props.count)\n  }\n  return (\n    <div>\n      <h1>This is count {count}</h1>\n      <button onClick={increment}>+1</button>\n      <button onClick={reset}>Reset</button>\n      <button onClick={decrement}>-1</button>\n    </div>\n  )\n}\nApp.defaultProps = {\n  count:0\n}\n\n\nconst AddNotes = () => {\n  const [title, setTitle] = useState('sd');\n  const [notes, setNotes] = useState([]);\n  const [noteBody, setNoteBody] = useState('');\n  const addnote = (e) => {\n    e.preventDefault()\n    //console.log(e.target.value)\n    //console.log(title)\n    setNotes([\n      ...notes,\n      {title,noteBody}\n    ])\n    setTitle('')\n  }\n  const removeNote = (title) => {\n    setNotes(notes.filter((note)=>note.title!==title))\n  }\n  return (\n    <div>\n      <h1>{notes.map((note) => (\n        <div>\n          {note.title}\n          <p>{ note.noteBody}</p>\n          <button onClick={()=>removeNote(note.title)}>Remove</button>\n        </div>\n      )) }</h1>\n    <form onSubmit={addnote}>\n        <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n        <textarea type='text' value={noteBody} onChange={(e)=>setNoteBody(e.target.value)}/>\n      <button>Add Note</button>\n      </form>\n      </div>\n  )\n}\n\nReactDOM.render(\n  <div><AddNotes /></div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}